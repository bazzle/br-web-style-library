@use "all-vars" as vars;

.text-std{
	@extend %text-std;
}
.text-link{
	@extend %text-link
}
.text-body{
	@extend %text-std;
}
.text-intro{
	@extend %text-intro;
}
.text-medium{
	@extend %text-medium;
}
.text-heading{
	@extend %text-heading;
}
.text-display{
	@extend %text-display;
}
.text-blocky{
	@extend %text-blocky;
}
.text-miniscule{
	@extend %text-miniscule;
}

body{
	position: relative;
	padding: 0;
	margin: 0;
	background-color: var(--color-bg-off-solid);
	color: var(--color-foreground);
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	@extend %text-std-defaults;
}

p.outset-text{
	line-height: 1.4;
	color: var(--color-accent-alt);
	border-left: 2px solid var(--color-accent-alt);
	padding-left: 2rem;
	position: relative;
	@include vars.break(tablet){
		left: -2rem;
	}
}

h2, h3, h4, h5, h6{
	&:not([class]){
		@extend %text-heading--chunky;
		color: var(--color-accent-alt);
	}
}
h4, h5, h6{
	&:not([class]){
		font-size: vars.$font-size-heading-small;
	}
}

h2, h3, h4, h5, h6, p, ul, ol, blockquote{
	&:not([class]){
		margin-bottom: vars.$block-spacing--text;
	}
	> *:last-child {
		margin-bottom: 0!important;
	}
}
p, li, blockquote{
	&:not([class]){
		max-width: vars.$content-width;
		@extend %text-std;
		@media print{
			max-width: 100rem;
		}
	}
}
li{
	&:not([class]){
		margin-bottom: .6rem;
		&:last-of-type{
			margin-bottom: 0;
		}
	}
}
blockquote{
	&:not([class]){
		border-left: 1px solid var(--color-accent-alt);
		padding-left: 1em;
		padding-top: 0;
		padding-bottom: 0;
		position: relative;
		@include vars.break(tablet){
			left: -1em;
		}
	}
}
img + em{
	padding-top: 1em;
	@extend %text-tiny;
	display: block;
}